AWSTemplateFormatVersion: 2010-09-09
Description: AWS Service Broker - Amazon RDS for PostgreSQL (qs-1ob09h6aj)
Metadata:
  AWS::ServiceBroker::Specification:
    Version: 1.0
    Tags:
    - AWS
    - RDS
    - PostgreSQL
    - database
    Name: mendix-database
    DisplayName: Amazon RDS for PostgreSQL
    LongDescription: PostgreSQL has become the preferred open source relational database
      for many enterprise developers and start-ups, powering leading geospatial and
      mobile applications. Amazon RDS makes it easy to set up, operate, and scale
      PostgreSQL deployments in the cloud. With Amazon RDS, you can deploy scalable
      PostgreSQL deployments in minutes with cost-efficient and resizable hardware
      capacity. Amazon RDS manages complex and time-consuming administrative tasks
      such as PostgreSQL software installation and upgrades; storage management; replication
      for high availability and read throughput; and backups for disaster recovery.
    ImageUrl: https://s3.amazonaws.com/awsservicebroker/icons/AmazonRDS_LARGE.png
    DocumentationUrl: https://aws.amazon.com/documentation/rds/
    ProviderDisplayName: Amazon Web Services
    ServicePlans:
      production:
        DisplayName: Production
        Description: Configuration designed for production deployments
        LongDescription: Creates an Amazon RDS for PostgreSQL database optimised for
          production use
        Cost: https://aws.amazon.com/rds/pricing/
        ParameterValues:
          DBInstanceClass: db.m4.xlarge
          EngineVersion: 9.6.3
          PostgresServerTimezone: UTC
          MultiAZ: 'true'
          NumberOfAvailabilityZones: '2'
          AvailabilityZones: Auto
          AccessCidr: 10.0.0.0/16
          PubliclyAccessible: 'false'
          CidrSize: '27'
          CidrBlocks: Auto
          DBName: Auto
          PortNumber: 13306
          StorageEncrypted: 'true'
          StorageType: io1
          AllocatedStorageGiB: 20
          AllocatedStorageAndIops: 100 GB / 1,000 IOPS
          CopyTagsToSnapshot: 'true'
          BackupRetentionPeriod: 35
          MonitoringInterval: '1'
          RetainDatabase: 'true'
          AllowMajorVersionUpgrade: 'false'
          AutoMinorVersionUpgrade: 'true'
          MasterUsername: master
          MasterUserPassword: Auto
          PreferredBackupWindow: 04:00-06:00
          PreferredMaintenanceWindowDay: Sat
          PreferredMaintenanceWindowStartTime: 06:00
          PreferredMaintenanceWindowEndTime: 07:00
      dev:
        DisplayName: Development
        Description: Configuration designed for development and testing deployments
        LongDescription: Creates an Amazon RDS for PostgreSQL database optimised for
          dev/test use
        Cost: https://aws.amazon.com/rds/pricing/
        ParameterValues:
          DBInstanceClass: db.t2.micro
          EngineVersion: 9.6.3
          PostgresServerTimezone: UTC
          MultiAZ: 'false'
          NumberOfAvailabilityZones: '2'
          AvailabilityZones: Auto
          AccessCidr: 10.0.0.0/16
          PubliclyAccessible: 'false'
          CidrSize: '28'
          CidrBlocks: Auto
          DBName: Auto
          PortNumber: 13306
          StorageEncrypted: 'false'
          StorageType: gp2
          AllocatedStorageGiB: 20
          AllocatedStorageAndIops: 100 GB / 1,000 IOPS
          CopyTagsToSnapshot: 'false'
          BackupRetentionPeriod: 0
          MonitoringInterval: '60'
          RetainDatabase: 'false'
          AllowMajorVersionUpgrade: 'false'
          AutoMinorVersionUpgrade: 'true'
          MasterUsername: master
          MasterUserPassword: Auto
          PreferredBackupWindow: 04:00-06:00
          PreferredMaintenanceWindowDay: Sat
          PreferredMaintenanceWindowStartTime: 06:00
          PreferredMaintenanceWindowEndTime: 07:00
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Database Instance Specifications
      Parameters:
      - DBInstanceClass
      - AllocatedStorageAndIops
      - AllocatedStorageGiB
    - Label:
        default: Database Options
      Parameters:
      - EngineVersion
      - PostgresServerTimezone
      - MultiAZ
      - PortNumber
      - MasterUsername
      - MasterUserPassword
    - Label:
        default: Network and Security
      Parameters:
      - VpcId
      - PubliclyAccessible
      - AccessCidr
      - CidrBlocks
      - CidrSize
      - AvailabilityZones
      - NumberOfAvailabilityZones
    - Label:
        default: Backup
      Parameters:
      - PreferredBackupWindow
    - Label:
        default: Maintenance
      Parameters:
      - PreferredMaintenanceWindowDay
      - PreferredMaintenanceWindowStartTime
      - PreferredMaintenanceWindowEndTime
    - Label:
        default: Deletion options
      Parameters:
      - RetainDatabase
    ParameterLabels:
      MasterUsername:
        default: Master Username
      MasterUserPassword:
        default: Master User Password
      CidrBlocks:
        default: CIDR Blocks
      CidrSize:
        default: CIDR Size
      AvailabilityZones:
        default: Availability Zones
      NumberOfAvailabilityZones:
        default: Number Of Availability Zones
      MultiAZ:
        default: Multi AZ
      PortNumber:
        default: Port Number
      DBInstanceClass:
        default: DB Instance Class
      AllocatedStorageAndIops:
        default: Allocated Storage And IOPS (for io1)
      AllocatedStorageGiB:
        default: Allocated Storage (for gp2)
      RetainDatabase:
        default: Create a backup of the database on deletion
      EngineVersion:
        default: Engine Version
      PostgresServerTimezone:
        default: PostgreSQL Server Timezone
      VpcId:
        default: VPC Id
      PubliclyAccessible:
        default: Publicly Accessible
      AccessCidr:
        default: Access CIDR
      PreferredBackupWindow:
        default: Preferred Backup Window
      PreferredMaintenanceWindowDay:
        default: Preferred Maintenance Window Day
      PreferredMaintenanceWindowStartTime:
        default: Preferred MaintenanceWindow Start Time
      PreferredMaintenanceWindowEndTime:
        default: Preferred Maintenance Window End Time
Parameters:
  AccessCidr:
    Description: CIDR block to allow to connect to database
    Type: String
  AllocatedStorageAndIops:
    Description: Storage/IOPS to allocate (for io1)
    Type: String
    Default: 100 GB / 1,000 IOPS
    AllowedValues:
    - 100 GB / 1,000 IOPS
    - 300 GB / 3,000 IOPS
    - 600 GB / 6,000 IOPS
    - 1,000 GB / 10,000 IOPS
    - 1,500 GB / 15,000 IOPS
    - 2,000 GB / 20,000 IOPS
    - 3,000 GB / 30,000 IOPS
    - 4,000 GB / 40,000 IOPS
    - 6,000 GB / 60,000 IOPS
  AllocatedStorageGiB:
    Description: Storage to allocate, in GiB (for gp2)
    Type: Number
    Default: 100
    MinValue: 20
    MaxValue: 65536
  AllowMajorVersionUpgrade:
    Description: If you update the EngineVersion property to a version that's different
      from the DB instance's current major version, set this property to true.
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  AutoMinorVersionUpgrade:
    Description: Indicates that minor engine upgrades are applied automatically to
      the DB instance during the maintenance window.
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'
  AvailabilityZones:
    Description: list of availability zones to use, must be the same quantity as specified
      in NumberOfAvailabilityZones
    Type: CommaDelimitedList
    Default: Auto
  BackupRetentionPeriod:
    Description: The number of days during which automatic DB snapshots are retained.
      Setting 0 disables automatic snapshots, maximum value is 35
    Type: Number
    Default: 35
    MinValue: 0
    MaxValue: 35
  CidrBlocks:
    Description: comma seperated list of CIDR blocks to place RDS into, must be the
      same quantity as specified in NumberOfAvailabilityZones
    Type: CommaDelimitedList
    Default: Auto
  CidrSize:
    Description: Size of Cidr block to allocate if CidrBlocks is set to Auto.
    Type: String
    Default: '27'
  CopyTagsToSnapshot:
    Description: Indicates whether to copy all of the user-defined tags from the DB
      instance to snapshots of the DB instance.
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'
  DBInstanceClass:
    Description: The compute and memory capacity of the DB instance.
    Type: String
    Default: db.m4.xlarge
    AllowedValues:
    - db.m1.small
    - db.m1.medium
    - db.m1.large
    - db.m1.xlarge
    - db.m2.xlarge
    - db.m2.2xlarge
    - db.m2.4xlarge
    - db.m3.medium
    - db.m3.large
    - db.m3.xlarge
    - db.m3.2xlarge
    - db.m4.large
    - db.m4.xlarge
    - db.m4.2xlarge
    - db.m4.4xlarge
    - db.m4.10xlarge
    - db.r3.large
    - db.r3.xlarge
    - db.r3.2xlarge
    - db.r3.4xlarge
    - db.r3.8xlarge
    - db.t2.micro
    - db.t2.small
    - db.t2.medium
    - db.t2.large
  RetainDatabase:
    Description: Specifies if the database should be preserved after deletion.
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'
  DBName:
    Description: The name of the database to create when the DB instance is created,
      will be autogenerated if set to "Auto".
    Type: String
    MinLength: '1'
    MaxLength: '63'
    Default: Auto
    AllowedPattern: ^(?!^postgres$)[a-zA-Z_][a-zA-Z0-9_]*$
    ConstraintDescription: must contain from 1 to 63 alphanumeric characters, and
      not be reserved postgres term.
  EngineVersion:
    Description: The version number of the database engine to use.
    Type: String
    Default: 9.6.3
    AllowedValues:
    - 9.3.12
    - 9.3.14
    - 9.3.16
    - 9.3.17
    - 9.4.7
    - 9.4.9
    - 9.4.11
    - 9.4.12
    - 9.5.2
    - 9.5.4
    - 9.5.6
    - 9.5.7
    - 9.6.1
    - 9.6.2
    - 9.6.3
  MasterUserPassword:
    Description: Master user database Password, if left at default a 32 character
      password will be generated
    Type: String
    Default: Auto
    NoEcho: 'True'
  MasterUsername:
    Description: Master database Username
    Type: String
  MonitoringInterval:
    Description: The interval, in seconds, between points when Enhanced Monitoring
      metrics are collected for the DB instance.
    Type: String
    Default: '1'
    AllowedValues:
    - '0'
    - '1'
    - '5'
    - '10'
    - '15'
    - '30'
    - '60'
  MultiAZ:
    Description: Specifies if the database instance is a multiple Availability Zone
      deployment.
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'
  NumberOfAvailabilityZones:
    Description: Quantity of subnets to use, if selecting more than 2 the region this
      stack is in must have at least that many Availability Zones
    Type: String
    Default: '2'
    AllowedValues:
    - '2'
    - '3'
    - '4'
    - '5'
  PortNumber:
    Description: The port number for the database server to listen on
    Type: Number
    Default: 10001
    MinValue: 1150
    MaxValue: 65535
  PostgresServerTimezone:
    Description: The default timezone for the database engine to use.
    Type: String
    Default: UTC
    AllowedValues:
    - Africa/Cairo
    - Africa/Casablanca
    - Africa/Harare
    - Africa/Monrovia
    - Africa/Nairobi
    - Africa/Tripoli
    - Africa/Windhoek
    - America/Araguaina
    - America/Asuncion
    - America/Bogota
    - America/Caracas
    - America/Chihuahua
    - America/Cuiaba
    - America/Denver
    - America/Fortaleza
    - America/Guatemala
    - America/Halifax
    - America/Manaus
    - America/Matamoros
    - America/Monterrey
    - America/Montevideo
    - America/Phoenix
    - America/Santiago
    - America/Tijuana
    - Asia/Amman
    - Asia/Ashgabat
    - Asia/Baghdad
    - Asia/Baku
    - Asia/Bangkok
    - Asia/Beirut
    - Asia/Calcutta
    - Asia/Damascus
    - Asia/Dhaka
    - Asia/Irkutsk
    - Asia/Jerusalem
    - Asia/Kabul
    - Asia/Karachi
    - Asia/Kathmandu
    - Asia/Krasnoyarsk
    - Asia/Magadan
    - Asia/Muscat
    - Asia/Novosibirsk
    - Asia/Riyadh
    - Asia/Seoul
    - Asia/Shanghai
    - Asia/Singapore
    - Asia/Taipei
    - Asia/Tehran
    - Asia/Tokyo
    - Asia/Ulaanbaatar
    - Asia/Vladivostok
    - Asia/Yakutsk
    - Asia/Yerevan
    - Atlantic/Azores
    - Australia/Adelaide
    - Australia/Brisbane
    - Australia/Darwin
    - Australia/Hobart
    - Australia/Perth
    - Australia/Sydney
    - Canada/Newfoundland
    - Canada/Saskatchewan
    - Brazil/East
    - Europe/Amsterdam
    - Europe/Athens
    - Europe/Dublin
    - Europe/Helsinki
    - Europe/Istanbul
    - Europe/Kaliningrad
    - Europe/Moscow
    - Europe/Paris
    - Europe/Prague
    - Europe/Sarajevo
    - Pacific/Auckland
    - Pacific/Fiji
    - Pacific/Guam
    - Pacific/Honolulu
    - Pacific/Samoa
    - US/Alaska
    - US/Central
    - US/Eastern
    - US/East-Indiana
    - US/Pacific
    - UTC
  PreferredBackupWindow:
    Description: The daily time range in UTC during which automated backups are created
      (if automated backups are enabled). Cannot overlap with PreferredMaintenanceWindowTime
    Type: String
    Default: 00:00-02:00
    AllowedValues:
    - 00:00-02:00
    - 01:00-03:00
    - 02:00-04:00
    - 03:00-05:00
    - 04:00-06:00
    - 05:00-07:00
    - 06:00-08:00
    - 07:00-09:00
    - 08:00-10:00
    - 09:00-11:00
    - 10:00-12:00
    - 11:00-13:00
    - 12:00-14:00
    - 13:00-15:00
    - 14:00-16:00
    - 15:00-17:00
    - 16:00-18:00
    - 17:00-19:00
    - 18:00-20:00
    - 19:00-21:00
    - 20:00-22:00
    - 21:00-23:00
    - 22:00-24:00
  PreferredMaintenanceWindowDay:
    Description: The day of the week which RDS maintenance will be performed
    Type: String
    Default: Mon
    AllowedValues:
    - Mon
    - Tue
    - Wed
    - Thu
    - Fri
    - Sat
    - Sun
  PreferredMaintenanceWindowEndTime:
    Description: The weekly end time in UTC for the RDS maintenance window, must be
      more than PreferredMaintenanceWindowEndTime and cannot overlap with PreferredBackupWindow
    Type: String
    Default: 06:00
    AllowedValues:
    - 00:00
    - 01:00
    - 02:00
    - 03:00
    - 04:00
    - 05:00
    - 06:00
    - 07:00
    - 08:00
    - 09:00
    - '10:00'
    - '11:00'
    - '12:00'
    - '13:00'
    - '14:00'
    - '15:00'
    - '16:00'
    - '17:00'
    - '18:00'
    - '19:00'
    - '20:00'
    - '21:00'
    - '22:00'
  PreferredMaintenanceWindowStartTime:
    Description: The weekly start time in UTC for the RDS maintenance window, must
      be less than PreferredMaintenanceWindowEndTime and cannot overlap with PreferredBackupWindow
    Type: String
    Default: 04:00
    AllowedValues:
    - 00:00
    - 01:00
    - 02:00
    - 03:00
    - 04:00
    - 05:00
    - 06:00
    - 07:00
    - 08:00
    - 09:00
    - '10:00'
    - '11:00'
    - '12:00'
    - '13:00'
    - '14:00'
    - '15:00'
    - '16:00'
    - '17:00'
    - '18:00'
    - '19:00'
    - '20:00'
    - '21:00'
    - '22:00'
  PubliclyAccessible:
    Description: Indicates whether the DB instance is an Internet-facing instance.
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  StorageEncrypted:
    Description: Indicates whether the DB instance is encrypted.
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'
  StorageType:
    Description: Specifies the storage type to be associated with the DB instance.
    Type: String
    Default: io1
    AllowedValues:
    - io1
    - gp2
    - standard
  VpcId:
    Description: The ID of the VPC to launch the RDS instance into
    Type: AWS::EC2::VPC::Id
Mappings:
  Version2Family:
    9.3.12:
      Family: postgres9.3
      MajorVersion: '9.3'
    9.3.14:
      Family: postgres9.3
      MajorVersion: '9.3'
    9.3.16:
      Family: postgres9.3
      MajorVersion: '9.3'
    9.3.17:
      Family: postgres9.3
      MajorVersion: '9.3'
    9.4.7:
      Family: postgres9.4
      MajorVersion: '9.4'
    9.4.9:
      Family: postgres9.4
      MajorVersion: '9.4'
    9.4.11:
      Family: postgres9.4
      MajorVersion: '9.4'
    9.4.12:
      Family: postgres9.4
      MajorVersion: '9.4'
    9.5.2:
      Family: postgres9.5
      MajorVersion: '9.5'
    9.5.4:
      Family: postgres9.5
      MajorVersion: '9.5'
    9.5.6:
      Family: postgres9.5
      MajorVersion: '9.5'
    9.5.7:
      Family: postgres9.5
      MajorVersion: '9.5'
    9.6.1:
      Family: postgres9.6
      MajorVersion: '9.6'
    9.6.2:
      Family: postgres9.6
      MajorVersion: '9.6'
    9.6.3:
      Family: postgres9.6
      MajorVersion: '9.6'
Conditions:
  3az:
    !Or
    - !Equals
      - !Ref NumberOfAvailabilityZones
      - '3'
    - !Equals
      - !Ref NumberOfAvailabilityZones
      - '4'
    - !Equals
      - !Ref NumberOfAvailabilityZones
      - '5'
  4az:
    !Or
    - !Equals
      - !Ref NumberOfAvailabilityZones
      - '4'
    - !Equals
      - !Ref NumberOfAvailabilityZones
      - '5'
  5az:
    !Equals
    - !Ref NumberOfAvailabilityZones
    - '5'
  100GB:
    !Equals
    - !Ref AllocatedStorageAndIops
    - 100 GB / 1,000 IOPS
  300GB:
    !Equals
    - !Ref AllocatedStorageAndIops
    - 300 GB / 3,000 IOPS
  600GB:
    !Equals
    - !Ref AllocatedStorageAndIops
    - 600 GB / 6,000 IOPS
  1000GB:
    !Equals
    - !Ref AllocatedStorageAndIops
    - 1,000 GB / 10,000 IOPS
  1500GB:
    !Equals
    - !Ref AllocatedStorageAndIops
    - 1,500 GB / 15,000 IOPS
  2000GB:
    !Equals
    - !Ref AllocatedStorageAndIops
    - 2,000 GB / 20,000 IOPS
  3000GB:
    !Equals
    - !Ref AllocatedStorageAndIops
    - 3,000 GB / 30,000 IOPS
  4000GB:
    !Equals
    - !Ref AllocatedStorageAndIops
    - 4,000 GB / 40,000 IOPS
  AutoCidrs:
    !Equals
    - !Select
      - 0
      - !Ref CidrBlocks
    - Auto
  AutoAzs:
    !Equals
    - !Select
      - 0
      - !Ref AvailabilityZones
    - Auto
  AutoPassword:
    !Equals
    - !Ref MasterUserPassword
    - Auto
  AutoDBName:
    !Equals
    - !Ref DBName
    - Auto
  CustomStorage:
    !Equals
    - !Ref StorageType
    - 'gp2'
  DeletionPolicyRetain:
    !Equals
    - !Ref RetainDatabase
    - 'true'
  DeletionPolicyDelete:
    !Equals
    - !Ref RetainDatabase
    - 'false'
  EncryptionEnabled:
    !Equals
    - !Ref StorageEncrypted
    - 'true'
Resources:
  DBInstanceRetain:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      AllocatedStorage:
        !If
        - CustomStorage
        - !Ref AllocatedStorageGiB
        - !If
          - 100GB
          - '100'
          - !If
            - 300GB
            - '300'
            - !If
              - 600GB
              - '600'
              - !If
                - 1000GB
                - '1000'
                - !If
                  - 1500GB
                  - '1500'
                  - !If
                    - 2000GB
                    - '2000'
                    - !If
                      - 3000GB
                      - '3000'
                      - !If
                        - 4000GB
                        - '4000'
                        - '6000'
      AllowMajorVersionUpgrade: !Ref AllowMajorVersionUpgrade
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      CopyTagsToSnapshot: !Ref CopyTagsToSnapshot
      DBInstanceClass: !Ref DBInstanceClass
      DBName:
        !If
        - AutoDBName
        - !GetAtt AWSSBInjectedGenerateDBName.DBName
        - !Ref DBName
      DBParameterGroupName: !Ref DBParameterGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      EngineVersion: !Ref EngineVersion
      Iops:
        !If
        - CustomStorage
        - ''
        - !If
          - 100GB
          - '1000'
          - !If
            - 300GB
            - '3000'
            - !If
              - 600GB
              - '6000'
              - !If
                - 1000GB
                - '10000'
                - !If
                  - 1500GB
                  - '15000'
                  - !If
                    - 2000GB
                    - '20000'
                    - !If
                      - 3000GB
                      - '30000'
                      - !If
                        - 4000GB
                        - '40000'
                        - '60000'
      KmsKeyId:
        !If
        - EncryptionEnabled
        - !GetAtt KMSKey.Arn
        - !Ref AWS::NoValue
      LicenseModel: postgresql-license
      MasterUsername: !Ref MasterUsername
      MasterUserPassword:
        !If
        - AutoPassword
        - !GetAtt AWSSBInjectedGeneratePassword.MasterUserPassword
        - !Ref MasterUserPassword
      MonitoringInterval: !Ref MonitoringInterval
      MonitoringRoleArn: !GetAtt MonitoringRole.Arn
      MultiAZ: !Ref MultiAZ
      OptionGroupName: !Ref DBOptionGroupRetain
      Port: !Ref PortNumber
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Sub ${PreferredMaintenanceWindowDay}:${PreferredMaintenanceWindowStartTime}-${PreferredMaintenanceWindowDay}:${PreferredMaintenanceWindowEndTime}
      PubliclyAccessible: !Ref PubliclyAccessible
      StorageEncrypted: !Ref StorageEncrypted
      StorageType: !Ref StorageType
      VPCSecurityGroups:
      - !Ref RDSSecurityGroup
    Condition: DeletionPolicyRetain
  DBInstanceDelete:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage:
        !If
        - CustomStorage
        - !Ref AllocatedStorageGiB
        - !If
          - 100GB
          - '100'
          - !If
            - 300GB
            - '300'
            - !If
              - 600GB
              - '600'
              - !If
                - 1000GB
                - '1000'
                - !If
                  - 1500GB
                  - '1500'
                  - !If
                    - 2000GB
                    - '2000'
                    - !If
                      - 3000GB
                      - '3000'
                      - !If
                        - 4000GB
                        - '4000'
                        - '6000'
      AllowMajorVersionUpgrade: !Ref AllowMajorVersionUpgrade
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      CopyTagsToSnapshot: !Ref CopyTagsToSnapshot
      DBInstanceClass: !Ref DBInstanceClass
      DBName:
        !If
        - AutoDBName
        - !GetAtt AWSSBInjectedGenerateDBName.DBName
        - !Ref DBName
      DBParameterGroupName: !Ref DBParameterGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      EngineVersion: !Ref EngineVersion
      Iops:
        !If
        - CustomStorage
        - ''
        - !If
          - 100GB
          - '1000'
          - !If
            - 300GB
            - '3000'
            - !If
              - 600GB
              - '6000'
              - !If
                - 1000GB
                - '10000'
                - !If
                  - 1500GB
                  - '15000'
                  - !If
                    - 2000GB
                    - '20000'
                    - !If
                      - 3000GB
                      - '30000'
                      - !If
                        - 4000GB
                        - '40000'
                        - '60000'
      KmsKeyId:
        !If
        - EncryptionEnabled
        - !GetAtt KMSKey.Arn
        - !Ref AWS::NoValue
      LicenseModel: postgresql-license
      MasterUsername: !Ref MasterUsername
      MasterUserPassword:
        !If
        - AutoPassword
        - !GetAtt AWSSBInjectedGeneratePassword.MasterUserPassword
        - !Ref MasterUserPassword
      MonitoringInterval: !Ref MonitoringInterval
      MonitoringRoleArn: !GetAtt MonitoringRole.Arn
      MultiAZ: !Ref MultiAZ
      OptionGroupName: !Ref DBOptionGroupDelete
      Port: !Ref PortNumber
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Sub ${PreferredMaintenanceWindowDay}:${PreferredMaintenanceWindowStartTime}-${PreferredMaintenanceWindowDay}:${PreferredMaintenanceWindowEndTime}
      PubliclyAccessible: !Ref PubliclyAccessible
      StorageEncrypted: !Ref StorageEncrypted
      StorageType: !Ref StorageType
      VPCSecurityGroups:
      - !Ref RDSSecurityGroup
    Condition: DeletionPolicyDelete
  DBOptionGroupRetain:
    Type: AWS::RDS::OptionGroup
    DeletionPolicy: Retain
    Properties:
      EngineName: postgres
      MajorEngineVersion:
        !FindInMap
        - Version2Family
        - !Ref EngineVersion
        - MajorVersion
      OptionGroupDescription: !Sub StackName ${AWS::StackName} Database ${DBName}
      OptionConfigurations: []
    Condition: DeletionPolicyRetain
  DBOptionGroupDelete:
    Type: AWS::RDS::OptionGroup
    DeletionPolicy: Delete
    Properties:
      EngineName: postgres
      MajorEngineVersion:
        !FindInMap
        - Version2Family
        - !Ref EngineVersion
        - MajorVersion
      OptionGroupDescription: !Sub StackName ${AWS::StackName} Database ${DBName}
      OptionConfigurations: []
    Condition: DeletionPolicyDelete
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Sub StackName ${AWS::StackName} Database ${DBName}
      Family:
        !FindInMap
        - Version2Family
        - !Ref EngineVersion
        - Family
      Parameters:
        timezone: !Ref PostgresServerTimezone
  DBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
        - 0
        - !If
          - AutoAzs
          - !GetAtt AWSSBInjectedGetAzs.AvailabilityZones
          - !Ref AvailabilityZones
      VpcId: !Ref VpcId
      CidrBlock:
        !Select
        - 0
        - !If
          - AutoCidrs
          - !GetAtt AWSSBInjectedGetCidrs.CidrBlocks
          - !Ref CidrBlocks
  DBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
        - 1
        - !If
          - AutoAzs
          - !GetAtt AWSSBInjectedGetAzs.AvailabilityZones
          - !Ref AvailabilityZones
      VpcId: !Ref VpcId
      CidrBlock:
        !Select
        - 1
        - !If
          - AutoCidrs
          - !GetAtt AWSSBInjectedGetCidrs.CidrBlocks
          - !Ref CidrBlocks
  DBSubnet3:
    Condition: 3az
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
        - 2
        - !If
          - AutoAzs
          - !GetAtt AWSSBInjectedGetAzs.AvailabilityZones
          - !Ref AvailabilityZones
      VpcId: !Ref VpcId
      CidrBlock:
        !Select
        - 2
        - !If
          - AutoCidrs
          - !GetAtt AWSSBInjectedGetCidrs.CidrBlocks
          - !Ref CidrBlocks
  DBSubnet4:
    Condition: 4az
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
        - 3
        - !If
          - AutoAzs
          - !GetAtt AWSSBInjectedGetAzs.AvailabilityZones
          - !Ref AvailabilityZones
      VpcId: !Ref VpcId
      CidrBlock:
        !Select
        - 3
        - !If
          - AutoCidrs
          - !GetAtt AWSSBInjectedGetCidrs.CidrBlocks
          - !Ref CidrBlocks
  DBSubnet5:
    Condition: 5az
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        !Select
        - 4
        - !If
          - AutoAzs
          - !GetAtt AWSSBInjectedGetAzs.AvailabilityZones
          - !Ref AvailabilityZones
      VpcId: !Ref VpcId
      CidrBlock:
        !Select
        - 4
        - !If
          - AutoCidrs
          - !GetAtt AWSSBInjectedGetCidrs.CidrBlocks
          - !Ref CidrBlocks
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub CFNStack ${AWS::StackName} Database ${DBName}
      SubnetIds:
      - !Ref DBSubnet1
      - !Ref DBSubnet2
      - !If
        - 3az
        - !Ref DBSubnet3
        - !Ref AWS::NoValue
      - !If
        - 4az
        - !Ref DBSubnet4
        - !Ref AWS::NoValue
      - !If
        - 5az
        - !Ref DBSubnet5
        - !Ref AWS::NoValue
  KMSKey:
    Condition: EncryptionEnabled
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub Database ${DBName}
      Enabled: 'true'
      EnableKeyRotation: 'true'
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action:
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          Resource: '*'
  MonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: monitoring.rds.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: '!Sub Allow Client connections to RDS in ${AWS::StackName}
        Database ${DBName}'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: !Ref PortNumber
        ToPort: !Ref PortNumber
        CidrIp: !Ref AccessCidr
      SecurityGroupEgress:
      - IpProtocol: '-1'
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: 0.0.0.0/0
  AWSSBInjectedLambdaZipsBucket:
    Type: AWS::S3::Bucket
    Properties:
      Tags: []
  AWSSBInjectedCopyZips:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedCopyZipsLambda.Arn
      DestBucket: !Ref AWSSBInjectedLambdaZipsBucket
      SourceBucket: awsservicebrokeralpha
      Prefix: functions/
      Objects:
      - get_cidrs/lambda_function.zip
      - get_azs/lambda_function.zip
      - generate_password/lambda_function.zip
      - generate_dbname/lambda_function.zip
  AWSSBInjectedCopyZipsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
      - PolicyName: lambda-copier
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            Resource:
            - arn:aws:s3:::awsservicebrokeralpha/*
          - Effect: Allow
            Action:
            - s3:PutObject
            - s3:DeleteObject
            Resource:
            - !Sub arn:aws:s3:::${AWSSBInjectedLambdaZipsBucket}/*
  AWSSBInjectedCopyZipsLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Copies objects from a source S3 bucket to a destination
      Handler: index.handler
      Runtime: python2.7
      Role: !GetAtt AWSSBInjectedCopyZipsRole.Arn
      Timeout: 240
      Code:
        ZipFile: |
          import json
          import logging
          import threading
          import boto3
          import cfnresponse


          def copy_objects(source_bucket, dest_bucket, prefix, objects):
              s3 = boto3.client('s3')
              for o in objects:
                  key = prefix + o
                  copy_source = {
                      'Bucket': source_bucket,
                      'Key': key
                  }
                  print('copy_source: %s' % copy_source)
                  print('dest_bucket = %s' % dest_bucket)
                  print('key = %s' % key)
                  s3.copy_object(CopySource=copy_source, Bucket=dest_bucket, Key=key)


          def delete_objects(bucket, prefix, objects):
              s3 = boto3.client('s3')
              objects = {'Objects': [{'Key': prefix + o} for o in objects]}
              s3.delete_objects(Bucket=bucket, Delete=objects)


          def timeout(event, context):
              logging.error('Execution is about to time out, sending failure response to CloudFormation')
              cfnresponse.send(event, context, cfnresponse.FAILED, {}, None)


          def handler(event, context):
              timer = threading.Timer((context.get_remaining_time_in_millis() / 1000.00) - 0.5, timeout, args=[event, context])
              timer.start()
              print('Received event: %s' % json.dumps(event))
              status = cfnresponse.SUCCESS
              try:
                  source_bucket = event['ResourceProperties']['SourceBucket']
                  dest_bucket = event['ResourceProperties']['DestBucket']
                  prefix = event['ResourceProperties']['Prefix']
                  objects = event['ResourceProperties']['Objects']
                  if event['RequestType'] == 'Delete':
                      delete_objects(dest_bucket, prefix, objects)
                  else:
                      copy_objects(source_bucket, dest_bucket, prefix, objects)
              except Exception as e:
                  logging.error('Exception: %s' % e, exc_info=True)
                  status = cfnresponse.FAILED
              finally:
                  timer.cancel()
                  cfnresponse.send(event, context, status, {}, None)
  AWSSBInjectedGetCidrsRole:
    Condition: AutoCidrs
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cfn_utility_get_cidrs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:DescribeVpcs
            - ec2:DescribeSubnets
            - ec2:DescribeAvailabilityZones
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  AWSSBInjectedGetCidrsLambda:
    DependsOn: AWSSBInjectedCopyZips
    Condition: AutoCidrs
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role:
        Fn::GetAtt:
        - AWSSBInjectedGetCidrsRole
        - Arn
      Code:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: functions/get_cidrs/lambda_function.zip
      Runtime: python2.7
      Timeout: '60'
  AWSSBInjectedGetCidrs:
    Condition: AutoCidrs
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedGetCidrsLambda.Arn
      Qty: !Ref NumberOfAvailabilityZones
      VpcId: !Ref VpcId
      CidrSize: !Ref CidrSize
  AWSSBInjectedGetAzsRole:
    Condition: AutoAzs
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cfn_utility_get_cidrs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:DescribeAvailabilityZones
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  AWSSBInjectedGetAzsLambda:
    DependsOn: AWSSBInjectedCopyZips
    Condition: AutoAzs
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role:
        Fn::GetAtt:
        - AWSSBInjectedGetAzsRole
        - Arn
      Code:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: functions/get_azs/lambda_function.zip
      Runtime: python2.7
      Timeout: '60'
  AWSSBInjectedGetAzs:
    Condition: AutoAzs
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedGetAzsLambda.Arn
      Qty: !Ref NumberOfAvailabilityZones
  AWSSBInjectedGeneratePasswordRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cfn_utility_get_cidrs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  AWSSBInjectedGeneratePasswordLambda:
    DependsOn: AWSSBInjectedCopyZips
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role:
        Fn::GetAtt:
        - AWSSBInjectedGeneratePasswordRole
        - Arn
      Code:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: functions/generate_password/lambda_function.zip
      Runtime: python3.6
      Timeout: '60'
  AWSSBInjectedGeneratePassword:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedGeneratePasswordLambda.Arn
      Length: 32
  AWSSBInjectedGenerateDBNameRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cfn_utility_get_cidrs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  AWSSBInjectedGenerateDBNameLambda:
    DependsOn: AWSSBInjectedCopyZips
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role:
        Fn::GetAtt:
        - AWSSBInjectedGenerateDBNameRole
        - Arn
      Code:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: functions/generate_dbname/lambda_function.zip
      Runtime: python3.6
      Timeout: '60'
  AWSSBInjectedGenerateDBName:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedGenerateDBNameLambda.Arn
      Length: 32
Outputs:
  EndpointAddress:
    Value: !If [DeletionPolicyRetain, !GetAtt DBInstanceRetain.Endpoint.Address, !GetAtt DBInstanceDelete.Endpoint.Address]
  MasterUsername:
    Value: !Ref MasterUsername
  MasterPassword:
    Value:
      !If
      - AutoPassword
      - !GetAtt AWSSBInjectedGeneratePassword.MasterUserPassword
      - !Ref MasterUserPassword
  Port:
    Value: !Ref PortNumber
  DBName:
    Value:
      !If
      - AutoDBName
      - !GetAtt AWSSBInjectedGenerateDBName.DBName
      - !Ref DBName
